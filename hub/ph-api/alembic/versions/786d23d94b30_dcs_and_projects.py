"""dcs and projects

Revision ID: 786d23d94b30
Revises: 82fd6503d5be
Create Date: 2025-04-08 17:50:53.949625

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "786d23d94b30"
down_revision: Union[str, None] = "82fd6503d5be"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("data_region", sa.String(), nullable=False),
        sa.Column("s3_bucket_name", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organizations.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_index(op.f("ix_projects_name"), "projects", ["name"], unique=False)
    op.create_index(
        op.f("ix_projects_organization_id"),
        "projects",
        ["organization_id"],
        unique=False,
    )
    op.create_index(op.f("ix_projects_user_id"), "projects", ["user_id"], unique=False)
    op.add_column("batches", sa.Column("project_id", sa.Integer(), nullable=True))
    op.create_index(
        op.f("ix_batches_project_id"), "batches", ["project_id"], unique=False
    )
    op.create_foreign_key(
        None, "batches", "projects", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.add_column("files", sa.Column("project_id", sa.Integer(), nullable=True))
    op.create_index(op.f("ix_files_project_id"), "files", ["project_id"], unique=False)
    op.create_foreign_key(
        None, "files", "projects", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_index("ix_users_phone", table_name="users")
    op.drop_column("users", "phone")
    op.drop_column("users", "phone_verified")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("phone_verified", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users", sa.Column("phone", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_index("ix_users_phone", "users", ["phone"], unique=True)
    op.alter_column("users", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint(None, "files", type_="foreignkey")
    op.drop_index(op.f("ix_files_project_id"), table_name="files")
    op.drop_column("files", "project_id")
    op.drop_constraint(None, "batches", type_="foreignkey")
    op.drop_index(op.f("ix_batches_project_id"), table_name="batches")
    op.drop_column("batches", "project_id")
    op.drop_index(op.f("ix_projects_user_id"), table_name="projects")
    op.drop_index(op.f("ix_projects_organization_id"), table_name="projects")
    op.drop_index(op.f("ix_projects_name"), table_name="projects")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    # ### end Alembic commands ###
