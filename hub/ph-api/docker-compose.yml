version: '3.9'
services:
    postgres:
        image: postgres:14-alpine
        ports:
            - 30110:5432
        environment:
            - POSTGRES_USER=main
            - POSTGRES_DB=hub-api
            - POSTGRES_PASSWORD=main
        networks:
            - hub-api-net
    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: 'test@test.com'
            PGADMIN_DEFAULT_PASSWORD: 'test'
        ports:
            - 16760:80
        volumes:
            - ./pgadmin4/servers.json:/pgadmin4/servers.json
            - ./pgadmin4/pgpassfile:/var/lib/pgadmin/pgpass
        networks:
            - hub-api-net
        entrypoint: >
            sh -c "
            chmod 600 /var/lib/pgadmin/pgpass;
            /entrypoint.sh
            "
        user: "root"
    redis:
        image: redis:alpine
        container_name: hub-api_redis_db
        command: redis-server
        ports:
            - 31096:6379
        volumes:
            - ./data:/data
        restart: always
        networks:
            - hub-api-net
    kafka:
        image: confluentinc/cp-kafka:7.5.0
        hostname: hub-api_kafka
        container_name: hub-api_kafka
        ports:
            - 9218:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: 'broker,controller'
            KAFKA_CONTROLLER_QUORUM_VOTERS: '1@hub-api_kafka:29093'
            KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://hub-api_kafka:29093'
            KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9218'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT'
            KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
            KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3000
            KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 6000
            KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 300000
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_LOG_DIRS: '/var/lib/kafka/data'
            KAFKA_LOG_RETENTION_HOURS: 168
            KAFKA_NUM_PARTITIONS: 1
        volumes:
            - kafka-data:/var/lib/kafka/data
        networks:
            - hub-api-net
        command: |
            bash -c '
            echo "Generating cluster ID..."
            CLUSTER_ID=$$(/bin/kafka-storage random-uuid)
            echo "Generated Cluster ID: $$CLUSTER_ID"
            echo "Formatting storage..."
            /bin/kafka-storage format -t $$CLUSTER_ID -c /etc/kafka/kraft/server.properties
            echo "Starting Kafka..."
            exec /etc/confluent/docker/run
            '
networks:
    hub-api-net:
        driver: bridge

volumes:
    kafka-data:
